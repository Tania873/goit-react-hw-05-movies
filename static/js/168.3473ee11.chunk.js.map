{"version":3,"file":"static/js/168.3473ee11.chunk.js","mappings":"+SAEMA,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAA,sBAAiC,CACtDC,OAAQ,CACNC,QAASJ,KAJV,cAEGK,EAFH,yBAOIA,GAPJ,gCASHC,QAAQC,IAAI,WAAZ,MATG,gFAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEoBP,EAAAA,EAAAA,IAAA,gBAAmBO,GAAW,CACnDN,OAAQ,CACNC,QAASJ,EACTU,SAAU,WALX,cAEGL,EAFH,yBAQIA,GARJ,gCAUHC,QAAQC,IAAI,WAAZ,MAVG,gFAcA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,gGAEoBV,EAAAA,EAAAA,IAAA,eAA0B,CAC/CC,OAAQ,CACNC,QAASJ,EACTU,SAAU,QACVG,MAAOD,EACPE,eAAe,EACfC,KAAM,KARP,cAEGV,EAFH,yBAWIA,GAXJ,gCAaHC,QAAQC,IAAI,WAAZ,MAbG,gFAiBA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAA2BP,GAA3B,gGAEoBP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,YAAsC,CAC3DN,OAAQ,CACNC,QAASJ,EACTU,SAAU,WALX,cAEGL,EAFH,yBAQIA,GARJ,gCAUHC,QAAQC,IAAI,WAAZ,MAVG,gFAcA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAA8BR,GAA9B,gGAEoBP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,YAAsC,CAC3DN,OAAQ,CACNC,QAASJ,EACTU,SAAU,QACVK,KAAM,KANP,cAEGV,EAFH,yBASIA,GATJ,gCAWHC,QAAQC,IAAI,WAAZ,MAXG,gFA5DPL,EAAAA,EAAAA,SAAAA,QAAyB,+B,mDCezB,IAfe,WACb,OACE,SAAC,KAAD,CACEgB,OAAO,MACPC,MAAM,MACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,GAGd,C,+ICfD,EAAkC,iCAAlC,EAA4E,wB,SC+C5E,EAzCgB,WACd,IAAQhB,GAAYiB,EAAAA,EAAAA,MAAZjB,QACR,GAAsCkB,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,GAAKvB,EAUL,OANA,mCAAC,qGACmBQ,EAAAA,EAAAA,IAAeR,GADlC,OACOwB,EADP,OAECJ,EAAeI,EAAIC,KAAKC,SACxBJ,GAAa,GAHd,2CAAD,uDAMO,WAAQ,CAChB,GAAE,CAACtB,KAGF,gCACGqB,IAAa,SAACM,EAAA,EAAD,KACZN,IACA,eAAIO,UAAWC,EAAf,SACGV,EAAYW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,2BACE,wBACE,oCAAYD,QAEd,uBAAIC,MAJGF,EADM,OAUnBV,GAAoC,IAAvBF,EAAYe,SACzB,gBAAKN,UAAWC,EAAhB,6CAIP,C","sources":["api.js","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '3c255862ff74050ccdb5109073919cb8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function trendingmoviesRequest() {\n  try {\n    const response = await axios.get(`trending/movie/day?`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function movieInfoRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function moviesQueryRequest(search) {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query: search,\n        include_adult: false,\n        page: 1,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function castRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function reviewsRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n","import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <ThreeDots\n      height=\"100\"\n      width=\"100\"\n      radius=\"9\"\n      color=\"#69709c\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsInfoList\":\"Reviews_reviewsInfoList__JxM3z\",\"noInfo\":\"Reviews_noInfo__978Xs\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { reviewsRequest } from '../../api';\nimport Loader from '../Loader/Loader';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsInfo, setReviewsInfo] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    (async function reviewsInfo() {\n      const res = await reviewsRequest(movieId);\n      setReviewsInfo(res.data.results);\n      setIsLoading(false);\n    })();\n\n    return () => {};\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <ul className={css.reviewsInfoList}>\n          {reviewsInfo.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>\n                <b>Author: {author}</b>\n              </p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {!isLoading && reviewsInfo.length === 0 && (\n        <div className={css.noInfo}>No information for this movie</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n\n// import { useParams } from 'react-router-dom';\n// import { useState, useEffect } from 'react';\n\n// import { reviewsRequest } from '../../api';\n// import { ReviewsInfoList } from './Reviews.styles';\n// import Loader from '../Loader/Loader';\n\n// const Reviews = () => {\n//   const { movieId } = useParams();\n//   const [reviewsInfo, setReviewsInfo] = useState([]);\n//   const [isLoading, setIsLoading] = useState(true);\n\n//   useEffect(() => {\n//     if (!movieId) {\n//       return;\n//     }\n\n//     (async function reviewsInfo() {\n//       const res = await reviewsRequest(movieId);\n//       setReviewsInfo(res.data.results);\n//       setIsLoading(false);\n//     })();\n\n//     return () => {};\n//   }, [movieId]);\n\n//   return (\n//     <>\n//       {isLoading && <Loader />}\n//       {!isLoading && (\n//         <ReviewsInfoList>\n//           {reviewsInfo.map(({ id, author, content }) => (\n//             <li key={id}>\n//               <p>\n//                 <b>Author: </b>\n//                 {author}\n//               </p>\n//               <p>{content}</p>\n//             </li>\n//           ))}\n//         </ReviewsInfoList>\n//       )}\n//       {!isLoading && reviewsInfo.length === 0 && (\n//         <div>No information for this movie</div>\n//       )}\n//     </>\n//   );\n// };\n\n// export default Reviews;\n"],"names":["API_KEY","trendingmoviesRequest","axios","params","api_key","response","console","log","movieInfoRequest","movieId","language","moviesQueryRequest","search","query","include_adult","page","castRequest","reviewsRequest","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","useParams","useState","reviewsInfo","setReviewsInfo","isLoading","setIsLoading","useEffect","res","data","results","Loader","className","css","map","id","author","content","length"],"sourceRoot":""}