{"version":3,"file":"static/js/76.f4fef30b.chunk.js","mappings":"8SAEMA,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAA,sBAAiC,CACtDC,OAAQ,CACNC,QAASJ,KAJV,cAEGK,EAFH,yBAOIA,GAPJ,gCASHC,QAAQC,IAAI,WAAZ,MATG,gFAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEoBP,EAAAA,EAAAA,IAAA,gBAAmBO,GAAW,CACnDN,OAAQ,CACNC,QAASJ,EACTU,SAAU,WALX,cAEGL,EAFH,yBAQIA,GARJ,gCAUHC,QAAQC,IAAI,WAAZ,MAVG,gFAcA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,gGAEoBV,EAAAA,EAAAA,IAAA,eAA0B,CAC/CC,OAAQ,CACNC,QAASJ,EACTU,SAAU,QACVG,MAAOD,EACPE,eAAe,EACfC,KAAM,KARP,cAEGV,EAFH,yBAWIA,GAXJ,gCAaHC,QAAQC,IAAI,WAAZ,MAbG,gFAiBA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAA2BP,GAA3B,gGAEoBP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,YAAsC,CAC3DN,OAAQ,CACNC,QAASJ,EACTU,SAAU,WALX,cAEGL,EAFH,yBAQIA,GARJ,gCAUHC,QAAQC,IAAI,WAAZ,MAVG,gFAcA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAA8BR,GAA9B,gGAEoBP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,YAAsC,CAC3DN,OAAQ,CACNC,QAASJ,EACTU,SAAU,QACVK,KAAM,KANP,cAEGV,EAFH,yBASIA,GATJ,gCAWHC,QAAQC,IAAI,WAAZ,MAXG,gFA5DPL,EAAAA,EAAAA,SAAAA,QAAyB,+B,8ICFzB,EAA2B,uBAA3B,EAAwD,kBAAxD,EAAiF,mB,SC4DjF,EAtDa,WACX,IAAQO,GAAYS,EAAAA,EAAAA,MAAZT,QACR,GAAgCU,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,GAAKf,EAUL,OANA,mCAAC,qGACmBO,EAAAA,EAAAA,IAAYP,GAD/B,OACOgB,EADP,OAECJ,EAAYI,EAAIC,KAAKC,MACrBJ,GAAa,GAHd,2CAAD,uDAMO,WAAQ,CAChB,GAAE,CAACd,KAGF,gCACGa,IAAa,SAACM,EAAA,EAAD,KACZN,IACA,eAAIO,UAAWC,EAAf,SACGV,EAASW,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACpC,OACE,0BACGA,GACC,gBACEC,IAAK,kCAAoCD,EACzCE,IAAKH,EACLI,MAAO,OAGT,gBAAKT,UAAWC,EAAhB,uBAEF,cAAGD,UAAWC,EAAd,UACE,uBAAII,OAEN,eAAGL,UAAWC,EAAd,WACE,uCADF,KACuBG,EADvB,UAbOD,EAkBZ,OAGHV,GAAiC,IAApBF,EAASmB,SACtB,6DAIP,C,mDCzCD,IAfe,WACb,OACE,SAAC,KAAD,CACEC,OAAO,MACPF,MAAM,MACNG,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,GAGd,C","sources":["api.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '3c255862ff74050ccdb5109073919cb8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function trendingmoviesRequest() {\n  try {\n    const response = await axios.get(`trending/movie/day?`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function movieInfoRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function moviesQueryRequest(search) {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query: search,\n        include_adult: false,\n        page: 1,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function castRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function reviewsRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"div\":\"Cast_div__PH4d5\",\"text\":\"Cast_text__P2vgu\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { castRequest } from '../../api';\nimport Loader from '../Loader/Loader';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castInfo, setCastInfo] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    (async function castInfo() {\n      const res = await castRequest(movieId);\n      setCastInfo(res.data.cast);\n      setIsLoading(false);\n    })();\n\n    return () => {};\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <ul className={css.castList}>\n          {castInfo.map(({ id, character, name, profile_path }) => {\n            return (\n              <li key={id}>\n                {profile_path ? (\n                  <img\n                    src={'https://image.tmdb.org/t/p/w500' + profile_path}\n                    alt={name}\n                    width={200}\n                  ></img>\n                ) : (\n                  <div className={css.div}>No Image</div>\n                )}\n                <p className={css.text}>\n                  <b>{name}</b>\n                </p>\n                <p className={css.text}>\n                  <b>Character: </b>( {character} )\n                </p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {!isLoading && castInfo.length === 0 && (\n        <div>No information for this movie</div>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n\n// import { useParams } from 'react-router-dom';\n// import { useState, useEffect } from 'react';\n\n// import { castRequest } from '../../api';\n// import { CastList, NoImage } from './Cast.styles';\n// import Loader from '../Loader/Loader';\n\n// const Cast = () => {\n//   const { movieId } = useParams();\n//   const [castInfo, setCastInfo] = useState([]);\n//   const [isLoading, setIsLoading] = useState(true);\n\n//   useEffect(() => {\n//     if (!movieId) {\n//       return;\n//     }\n\n//     (async function castInfo() {\n//       const res = await castRequest(movieId);\n//       setCastInfo(res.data.cast);\n//       setIsLoading(false);\n//     })();\n\n//     return () => {};\n//   }, [movieId]);\n\n//   return (\n//     <>\n//       {isLoading && <Loader />}\n//       {!isLoading && (\n//         <CastList>\n//           {castInfo.map(({ id, character, name, profile_path }) => {\n//             return (\n//               <li key={id}>\n//                 {profile_path ? (\n//                   <img\n//                     src={'https://image.tmdb.org/t/p/w500' + profile_path}\n//                     alt={name}\n//                     width={200}\n//                   ></img>\n//                 ) : (\n//                   <NoImage>No Image</NoImage>\n//                 )}\n//                 <p>\n//                   <b>{name}</b>\n//                 </p>\n//                 <p>\n//                   <b>Character: </b>( {character} )\n//                 </p>\n//               </li>\n//             );\n//           })}\n//         </CastList>\n//       )}\n//       {!isLoading && castInfo.length === 0 && (\n//         <div>No information for this movie</div>\n//       )}\n//     </>\n//   );\n// };\n\n// export default Cast;\n","import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <ThreeDots\n      height=\"100\"\n      width=\"100\"\n      radius=\"9\"\n      color=\"#69709c\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n"],"names":["API_KEY","trendingmoviesRequest","axios","params","api_key","response","console","log","movieInfoRequest","movieId","language","moviesQueryRequest","search","query","include_adult","page","castRequest","reviewsRequest","useParams","useState","castInfo","setCastInfo","isLoading","setIsLoading","useEffect","res","data","cast","Loader","className","css","map","id","character","name","profile_path","src","alt","width","length","height","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible"],"sourceRoot":""}