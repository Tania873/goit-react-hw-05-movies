{"version":3,"file":"static/js/971.ee63176b.chunk.js","mappings":"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","sources":["api.js","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/AboutMovie/AboutMovie.module.css?76e2","components/AboutMovie/AboutMovie.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '3c255862ff74050ccdb5109073919cb8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function trendingmoviesRequest() {\n  try {\n    const response = await axios.get(`trending/movie/day?`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function movieInfoRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function moviesQueryRequest(search) {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query: search,\n        include_adult: false,\n        page: 1,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function castRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function reviewsRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n","import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <ThreeDots\n      height=\"100\"\n      width=\"100\"\n      radius=\"9\"\n      color=\"#69709c\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"AboutMovie_section__pmtoi\",\"mainTitle\":\"AboutMovie_mainTitle__aviJi\"};","import PropTypes from 'prop-types';\nimport css from './AboutMovie.module.css';\n\nexport const AboutMovie = ({ movieInfo }) => {\n  const {\n    original_title,\n    release_date,\n    overview = 'There is no overview',\n    vote_average,\n    genres = [],\n    poster_path,\n    status,\n  } = movieInfo;\n\n  const data = new Date(release_date).getFullYear();\n\n  return (\n    <section className={css.section}>\n      {poster_path ? (\n        <img\n          src={'https://image.tmdb.org/t/p/w500' + poster_path}\n          alt=\"poster\"\n        ></img>\n      ) : (\n        <div>No image</div>\n      )}\n      <div>\n        <h1 className={css.mainTitle}>{original_title}</h1>\n        <p>\n          <b>Release date:</b> {data}\n        </p>\n        <p>\n          <b>User Score: </b>\n          {Math.round(vote_average * 10)} %\n        </p>\n        <p>\n          <b>Status:</b> {status}\n        </p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h2>Genres</h2>\n        <ul>\n          {genres.map(genre => (\n            <li key={genre.id}>{genre.name}</li>\n          ))}\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nAboutMovie.propTypes = {\n  movieInfo: PropTypes.shape({\n    title: PropTypes.string,\n    original_title: PropTypes.string,\n    release_date: PropTypes.string,\n    overview: PropTypes.string,\n    popularity: PropTypes.number,\n    genres: PropTypes.array,\n    poster_path: PropTypes.string,\n    status: PropTypes.string,\n  }).isRequired,\n};\n\n// import { Container } from './AboutMovie.styles';\n// import PropTypes from 'prop-types';\n\n// export const AboutMovie = ({ movieInfo }) => {\n//   const {\n//     title,\n//     original_title,\n//     release_date,\n//     overview = 'There is no overview',\n//     popularity,\n//     genres = [],\n//     poster_path,\n//     status,\n//   } = movieInfo;\n\n//   const data = new Date(release_date).getFullYear();\n\n//   return (\n//     <Container>\n//       {poster_path ? (\n//         <img\n//           src={'https://image.tmdb.org/t/p/w500' + poster_path}\n//           alt=\"poster\"\n//         ></img>\n//       ) : (\n//         <div>No image</div>\n//       )}\n//       <div>\n//         <h1>\n//           {title}/{original_title}\n//         </h1>\n//         <p>\n//           <b>Release date:</b> {data}\n//         </p>\n//         <p>\n//           <b>User Scote: </b>\n//           {Math.round(popularity)} %\n//         </p>\n//         <p>\n//           <b>Status:</b> {status}\n//         </p>\n//         <h2>Overview</h2>\n//         <p>{overview}</p>\n//         <h2>Genres</h2>\n//         <ul>\n//           {genres.map(genre => (\n//             <li key={genre.id}>{genre.name}</li>\n//           ))}\n//         </ul>\n//       </div>\n//     </Container>\n//   );\n// };\n\n// AboutMovie.propTypes = {\n//   movieInfo: PropTypes.shape({\n//     title: PropTypes.string,\n//     original_title: PropTypes.string,\n//     release_date: PropTypes.string,\n//     overview: PropTypes.string,\n//     popularity: PropTypes.number,\n//     genres: PropTypes.array,\n//     poster_path: PropTypes.string,\n//     status: PropTypes.string,\n//   }).isRequired,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__Ys+c9\",\"goBackLink\":\"MovieDetails_goBackLink__0L6Dl\",\"box\":\"MovieDetails_box__0AyGO\",\"moreInfoTitle\":\"MovieDetails_moreInfoTitle__Y4jKF\",\"moreInfoList\":\"MovieDetails_moreInfoList__X9ckM\",\"moreInfoLink\":\"MovieDetails_moreInfoLink__v7Q4i\"};","import { Suspense, useState, useEffect, useRef } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\n\nimport { movieInfoRequest } from '../../api';\nimport { AboutMovie } from 'components/AboutMovie/AboutMovie';\nimport Loader from 'components/Loader/Loader';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    (async function aboutMovie() {\n      const res = await movieInfoRequest(movieId);\n      if (res.data.length === 0) {\n        return;\n      }\n      setMovieInfo(res.data);\n      setIsLoading(false);\n    })();\n\n    return () => {};\n  }, [movieId]);\n\n  return (\n    <div className={css.container}>\n      <Link className={css.goBackLink} to={backLinkHref.current ?? '/'}>\n        &#8678; Go back\n      </Link>\n\n      {isLoading && <Loader />}\n      {!isLoading && <AboutMovie movieInfo={movieInfo} />}\n\n      <div className={css.box}>\n        <p className={css.moreInfoTitle}>Additional information</p>\n        <ul className={css.moreInfoList}>\n          <li>\n            <Link className={css.moreInfoLink} to={'cast'}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link className={css.moreInfoLink} to={'reviews'}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","trendingmoviesRequest","axios","params","api_key","response","console","log","movieInfoRequest","movieId","language","moviesQueryRequest","search","query","include_adult","page","castRequest","reviewsRequest","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","AboutMovie","movieInfo","original_title","release_date","overview","vote_average","genres","poster_path","status","data","Date","getFullYear","className","css","src","alt","Math","round","map","genre","name","id","useState","setMovieInfo","useParams","location","useLocation","backLinkHref","useRef","state","from","isLoading","setIsLoading","useEffect","res","length","to","current","Loader","Suspense","fallback"],"sourceRoot":""}