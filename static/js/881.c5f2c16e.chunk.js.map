{"version":3,"file":"static/js/881.c5f2c16e.chunk.js","mappings":"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","sources":["api.js","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '3c255862ff74050ccdb5109073919cb8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function trendingmoviesRequest() {\n  try {\n    const response = await axios.get(`trending/movie/day?`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function movieInfoRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function moviesQueryRequest(search) {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query: search,\n        include_adult: false,\n        page: 1,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function castRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function reviewsRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__+-Cnt\",\"form\":\"Movies_form__4ow+Z\",\"moviesList\":\"Movies_moviesList__lstJL\",\"input\":\"Movies_input__KrUqs\",\"button\":\"Movies_button__GcIka\",\"moviesItem\":\"Movies_moviesItem__2Ne0E\",\"moviesLink\":\"Movies_moviesLink__c+bDX\",\"div\":\"Movies_div__Jujoi\"};","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { moviesQueryRequest } from '../../api';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [moviesFound, setMoviesFound] = useState([]);\n  const [noResult, setNoResult] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('search');\n  const location = useLocation();\n\n  function handlerQuery(e) {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const searchQuery = form.elements.search.value;\n\n    setSearchParams({ search: searchQuery });\n\n    form.reset();\n  }\n\n  useEffect(() => {\n    setNoResult(false);\n    if (!query) {\n      return;\n    }\n    (async function searchMovies() {\n      const res = await moviesQueryRequest(query);\n      const movies = res.data.results;\n      if (movies.length === 0) {\n        setNoResult(true);\n        return;\n      }\n      setMoviesFound(movies);\n    })(query);\n    return () => {};\n  }, [query]);\n\n  return (\n    <div className={css.container}>\n      <form className={css.form} onSubmit={handlerQuery}>\n        <input\n          className={css.input}\n          name=\"search\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        ></input>\n        <button className={css.button} type=\"submit\">\n          {' '}\n        </button>\n      </form>\n      {query && !noResult && (\n        <ul className={css.moviesList}>\n          {moviesFound.map(({ id, name, title }) => (\n            <li key={id} className={css.moviesItem}>\n              <Link\n                className={css.moviesLink}\n                to={`${id}`}\n                state={{ from: location }}\n                key={id}\n              >\n                {title} {name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n      {noResult && (\n        <div className={css.div}>Aw, there are no results for your query!</div>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n\n// import { useState, useEffect } from 'react';\n// import { Link, useSearchParams, useLocation } from 'react-router-dom';\n// import { moviesQueryRequest } from '../../api';\n\n// import {\n//   Container,\n//   Form,\n//   MoviesList,\n//   Input,\n//   Button,\n// } from '../../components/Layout/Layout.styles';\n\n// const Movies = () => {\n//   const [moviesFound, setMoviesFound] = useState([]);\n//   const [noResult, setNoResult] = useState(false);\n//   const [searchParams, setSearchParams] = useSearchParams();\n//   const query = searchParams.get('search');\n//   const location = useLocation();\n\n//   function handlerQuery(evt) {\n//     evt.preventDefault();\n\n//     const form = evt.currentTarget;\n//     const searchQuery = form.elements.search.value;\n\n//     setSearchParams({ search: searchQuery });\n\n//     form.reset();\n//   }\n\n//   useEffect(() => {\n//     setNoResult(false);\n//     if (!query) {\n//       return;\n//     }\n//     (async function searchMovies() {\n//       const res = await moviesQueryRequest(query);\n//       const movies = res.data.results;\n//       if (movies.length === 0) {\n//         setNoResult(true);\n//         return;\n//       }\n//       setMoviesFound(movies);\n//     })(query);\n//     return () => {};\n//   }, [query]);\n\n//   return (\n//     <Container>\n//       <Form onSubmit={handlerQuery}>\n//         <Input\n//           name=\"search\"\n//           type=\"text\"\n//           autoComplete=\"off\"\n//           autoFocus\n//           placeholder=\"Search movies\"\n//         ></Input>\n//         <Button type=\"submit\"> </Button>\n//       </Form>\n//       {query && !noResult && (\n//         <MoviesList>\n//           {moviesFound.map(({ id, name, title }) => (\n//             <li key={id}>\n//               <Link to={`${id}`} state={{ from: location }} key={id}>\n//                 {title} {name}\n//               </Link>\n//             </li>\n//           ))}\n//         </MoviesList>\n//       )}\n//       {noResult && <div>Aw, there are no results for your query!</div>}\n//     </Container>\n//   );\n// };\n\n// export default Movies;\n"],"names":["API_KEY","trendingmoviesRequest","axios","params","api_key","response","console","log","movieInfoRequest","movieId","language","moviesQueryRequest","search","query","include_adult","page","castRequest","reviewsRequest","useState","moviesFound","setMoviesFound","noResult","setNoResult","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useEffect","res","movies","data","results","length","className","css","onSubmit","e","preventDefault","form","currentTarget","searchQuery","elements","value","reset","name","type","autoComplete","autoFocus","placeholder","map","id","title","to","state","from"],"sourceRoot":""}